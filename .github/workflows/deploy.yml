name: Deploy

on:
  push:
    branches: [main, "feature/*"]
  pull_request:
    branches: [main, "feature/*"]

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn run test:ci
      - run: yarn run build
        env:
          REACT_APP_NODE_ENV: production
          REACT_APP_COMMIT_HASH: ${{ github.sha }}
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/cobertura-coverage.xml
          flags: unittests # optional
          name: codecov-umbrella # optional
      - name: ‚¨ÜÔ∏è Upload build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test-and-build]
    # if: ${{ github.event.pull_request.merged }}

    steps:
      - name: ‚¨áÔ∏è Download build/ folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./build
      - name: üê≥ Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: üê≥ Setup buildx
        uses: docker/setup-buildx-action@v2
      - name: üê≥ Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./infrastructure/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
